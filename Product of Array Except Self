class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int numLen = nums.size();
        vector<int> prefixProduct(numLen);
        vector<int> suffixProduct(numLen);
        vector<int> result(numLen);

        prefixProduct[0] = 1;

        for (int i = 1; i < numLen; i++ ){
            prefixProduct[i] = prefixProduct[i-1] * nums[i-1];
        }

        suffixProduct[numLen-1] = 1;

        for (int i = numLen - 2; i >= 0; i--){
            suffixProduct[i] = suffixProduct[i+1] * nums[i+1];
        }

        for (int i = 0; i < numLen; i++){
            result[i] = prefixProduct[i] * suffixProduct[i];
        }

        return result;

    }
};
